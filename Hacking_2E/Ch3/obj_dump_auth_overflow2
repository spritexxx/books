
auth_overflow2:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 fb                	add    %bh,%bl
 8048199:	92                   	xchg   %eax,%edx
 804819a:	76 99                	jbe    8048135 <_init-0x243>
 804819c:	8d                   	(bad)  
 804819d:	df c3                	ffreep %st(3)
 804819f:	17                   	pop    %ss
 80481a0:	9d                   	popf   
 80481a1:	7e 93                	jle    8048136 <_init-0x242>
 80481a3:	74 3e                	je     80481e3 <_init-0x195>
 80481a5:	01 2e                	add    %ebp,(%esi)
 80481a7:	8d                   	.byte 0x8d
 80481a8:	b9                   	.byte 0xb9
 80481a9:	d0 59 df             	rcrb   -0x21(%ecx)

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	09 00                	or     %eax,(%eax)
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 09                	add    %cl,(%ecx)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x1ec>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	43                   	inc    %ebx
	...
 80481e5:	00 00                	add    %al,(%eax)
 80481e7:	00 12                	add    %dl,(%edx)
 80481e9:	00 00                	add    %al,(%eax)
 80481eb:	00 3c 00             	add    %bh,(%eax,%eax,1)
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	12 00                	adc    (%eax),%al
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	2b 00                	sub    (%eax),%eax
	...
 8048206:	00 00                	add    %al,(%eax)
 8048208:	12 00                	adc    (%eax),%al
 804820a:	00 00                	add    %al,(%eax)
 804820c:	1a 00                	sbb    (%eax),%al
	...
 8048216:	00 00                	add    %al,(%eax)
 8048218:	12 00                	adc    (%eax),%al
 804821a:	00 00                	add    %al,(%eax)
 804821c:	26 00 00             	add    %al,%es:(%eax)
	...
 8048227:	00 12                	add    %dl,(%edx)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 5c 00 00          	add    %bl,0x0(%eax,%eax,1)
	...
 8048237:	00 20                	add    %ah,(%eax)
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 21                	add    %ah,(%ecx)
	...
 8048245:	00 00                	add    %al,(%eax)
 8048247:	00 12                	add    %dl,(%edx)
 8048249:	00 00                	add    %al,(%eax)
 804824b:	00 4a 00             	add    %cl,0x0(%edx)
	...
 8048256:	00 00                	add    %al,(%eax)
 8048258:	12 00                	adc    (%eax),%al
 804825a:	00 00                	add    %al,(%eax)
 804825c:	0b 00                	or     (%eax),%eax
 804825e:	00 00                	add    %al,(%eax)
 8048260:	ac                   	lods   %ds:(%esi),%al
 8048261:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8048264:	04 00                	add    $0x0,%al
 8048266:	00 00                	add    %al,(%eax)
 8048268:	11 00                	adc    %eax,(%eax)
 804826a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804826c <.dynstr>:
 804826c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048270:	63 2e                	arpl   %bp,(%esi)
 8048272:	73 6f                	jae    80482e3 <_init-0x95>
 8048274:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048279:	4f                   	dec    %edi
 804827a:	5f                   	pop    %edi
 804827b:	73 74                	jae    80482f1 <_init-0x87>
 804827d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048284:	64 
 8048285:	00 73 74             	add    %dh,0x74(%ebx)
 8048288:	72 63                	jb     80482ed <_init-0x8b>
 804828a:	70 79                	jo     8048305 <_init-0x73>
 804828c:	00 65 78             	add    %ah,0x78(%ebp)
 804828f:	69 74 00 70 75 74 73 	imul   $0x737475,0x70(%eax,%eax,1),%esi
 8048296:	00 
 8048297:	5f                   	pop    %edi
 8048298:	5f                   	pop    %edi
 8048299:	73 74                	jae    804830f <_init-0x69>
 804829b:	61                   	popa   
 804829c:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 804829f:	63 68 6b             	arpl   %bp,0x6b(%eax)
 80482a2:	5f                   	pop    %edi
 80482a3:	66 61                	popaw  
 80482a5:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%eax,%eax,1),%ebp
 80482ac:	74 
 80482ad:	66                   	data16
 80482ae:	00 73 74             	add    %dh,0x74(%ebx)
 80482b1:	72 63                	jb     8048316 <_init-0x62>
 80482b3:	6d                   	insl   (%dx),%es:(%edi)
 80482b4:	70 00                	jo     80482b6 <_init-0xc2>
 80482b6:	5f                   	pop    %edi
 80482b7:	5f                   	pop    %edi
 80482b8:	6c                   	insb   (%dx),%es:(%edi)
 80482b9:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80482c0:	72 74                	jb     8048336 <_init-0x42>
 80482c2:	5f                   	pop    %edi
 80482c3:	6d                   	insl   (%dx),%es:(%edi)
 80482c4:	61                   	popa   
 80482c5:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 80482cc:	6f                   	outsl  %ds:(%esi),(%dx)
 80482cd:	6e                   	outsb  %ds:(%esi),(%dx)
 80482ce:	5f                   	pop    %edi
 80482cf:	73 74                	jae    8048345 <_init-0x33>
 80482d1:	61                   	popa   
 80482d2:	72 74                	jb     8048348 <_init-0x30>
 80482d4:	5f                   	pop    %edi
 80482d5:	5f                   	pop    %edi
 80482d6:	00 47 4c             	add    %al,0x4c(%edi)
 80482d9:	49                   	dec    %ecx
 80482da:	42                   	inc    %edx
 80482db:	43                   	inc    %ebx
 80482dc:	5f                   	pop    %edi
 80482dd:	32 2e                	xor    (%esi),%ch
 80482df:	34 00                	xor    $0x0,%al
 80482e1:	47                   	inc    %edi
 80482e2:	4c                   	dec    %esp
 80482e3:	49                   	dec    %ecx
 80482e4:	42                   	inc    %edx
 80482e5:	43                   	inc    %ebx
 80482e6:	5f                   	pop    %edi
 80482e7:	32 2e                	xor    (%esi),%ch
 80482e9:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

080482ec <.gnu.version>:
 80482ec:	00 00                	add    %al,(%eax)
 80482ee:	02 00                	add    (%eax),%al
 80482f0:	02 00                	add    (%eax),%al
 80482f2:	03 00                	add    (%eax),%eax
 80482f4:	02 00                	add    (%eax),%al
 80482f6:	02 00                	add    (%eax),%al
 80482f8:	00 00                	add    %al,(%eax)
 80482fa:	02 00                	add    (%eax),%al
 80482fc:	02 00                	add    (%eax),%al
 80482fe:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048300 <.gnu.version_r>:
 8048300:	01 00                	add    %eax,(%eax)
 8048302:	02 00                	add    (%eax),%al
 8048304:	01 00                	add    %eax,(%eax)
 8048306:	00 00                	add    %al,(%eax)
 8048308:	10 00                	adc    %al,(%eax)
 804830a:	00 00                	add    %al,(%eax)
 804830c:	00 00                	add    %al,(%eax)
 804830e:	00 00                	add    %al,(%eax)
 8048310:	14 69                	adc    $0x69,%al
 8048312:	69 0d 00 00 03 00 6b 	imul   $0x6b,0x30000,%ecx
 8048319:	00 00 00 
 804831c:	10 00                	adc    %al,(%eax)
 804831e:	00 00                	add    %al,(%eax)
 8048320:	10 69 69             	adc    %ch,0x69(%ecx)
 8048323:	0d 00 00 02 00       	or     $0x20000,%eax
 8048328:	75 00                	jne    804832a <_init-0x4e>
 804832a:	00 00                	add    %al,(%eax)
 804832c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048330 <.rel.dyn>:
 8048330:	fc                   	cld    
 8048331:	9f                   	lahf   
 8048332:	04 08                	add    $0x8,%al
 8048334:	06                   	push   %es
 8048335:	06                   	push   %es
	...

Disassembly of section .rel.plt:

08048338 <.rel.plt>:
 8048338:	0c a0                	or     $0xa0,%al
 804833a:	04 08                	add    $0x8,%al
 804833c:	07                   	pop    %es
 804833d:	01 00                	add    %eax,(%eax)
 804833f:	00 10                	add    %dl,(%eax)
 8048341:	a0 04 08 07 02       	mov    0x2070804,%al
 8048346:	00 00                	add    %al,(%eax)
 8048348:	14 a0                	adc    $0xa0,%al
 804834a:	04 08                	add    $0x8,%al
 804834c:	07                   	pop    %es
 804834d:	03 00                	add    (%eax),%eax
 804834f:	00 18                	add    %bl,(%eax)
 8048351:	a0 04 08 07 04       	mov    0x4070804,%al
 8048356:	00 00                	add    %al,(%eax)
 8048358:	1c a0                	sbb    $0xa0,%al
 804835a:	04 08                	add    $0x8,%al
 804835c:	07                   	pop    %es
 804835d:	05 00 00 20 a0       	add    $0xa0200000,%eax
 8048362:	04 08                	add    $0x8,%al
 8048364:	07                   	pop    %es
 8048365:	06                   	push   %es
 8048366:	00 00                	add    %al,(%eax)
 8048368:	24 a0                	and    $0xa0,%al
 804836a:	04 08                	add    $0x8,%al
 804836c:	07                   	pop    %es
 804836d:	07                   	pop    %es
 804836e:	00 00                	add    %al,(%eax)
 8048370:	28 a0 04 08 07 08    	sub    %ah,0x8070804(%eax)
	...

Disassembly of section .init:

08048378 <_init>:
 8048378:	53                   	push   %ebx
 8048379:	83 ec 08             	sub    $0x8,%esp
 804837c:	e8 df 00 00 00       	call   8048460 <__x86.get_pc_thunk.bx>
 8048381:	81 c3 7f 1c 00 00    	add    $0x1c7f,%ebx
 8048387:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804838d:	85 c0                	test   %eax,%eax
 804838f:	74 05                	je     8048396 <_init+0x1e>
 8048391:	e8 6a 00 00 00       	call   8048400 <__gmon_start__@plt>
 8048396:	83 c4 08             	add    $0x8,%esp
 8048399:	5b                   	pop    %ebx
 804839a:	c3                   	ret    

Disassembly of section .plt:

080483a0 <strcmp@plt-0x10>:
 80483a0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483a6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483ac:	00 00                	add    %al,(%eax)
	...

080483b0 <strcmp@plt>:
 80483b0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483b6:	68 00 00 00 00       	push   $0x0
 80483bb:	e9 e0 ff ff ff       	jmp    80483a0 <_init+0x28>

080483c0 <printf@plt>:
 80483c0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483c6:	68 08 00 00 00       	push   $0x8
 80483cb:	e9 d0 ff ff ff       	jmp    80483a0 <_init+0x28>

080483d0 <__stack_chk_fail@plt>:
 80483d0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483d6:	68 10 00 00 00       	push   $0x10
 80483db:	e9 c0 ff ff ff       	jmp    80483a0 <_init+0x28>

080483e0 <strcpy@plt>:
 80483e0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483e6:	68 18 00 00 00       	push   $0x18
 80483eb:	e9 b0 ff ff ff       	jmp    80483a0 <_init+0x28>

080483f0 <puts@plt>:
 80483f0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80483f6:	68 20 00 00 00       	push   $0x20
 80483fb:	e9 a0 ff ff ff       	jmp    80483a0 <_init+0x28>

08048400 <__gmon_start__@plt>:
 8048400:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048406:	68 28 00 00 00       	push   $0x28
 804840b:	e9 90 ff ff ff       	jmp    80483a0 <_init+0x28>

08048410 <exit@plt>:
 8048410:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048416:	68 30 00 00 00       	push   $0x30
 804841b:	e9 80 ff ff ff       	jmp    80483a0 <_init+0x28>

08048420 <__libc_start_main@plt>:
 8048420:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048426:	68 38 00 00 00       	push   $0x38
 804842b:	e9 70 ff ff ff       	jmp    80483a0 <_init+0x28>

Disassembly of section .text:

08048430 <_start>:
 8048430:	31 ed                	xor    %ebp,%ebp
 8048432:	5e                   	pop    %esi
 8048433:	89 e1                	mov    %esp,%ecx
 8048435:	83 e4 f0             	and    $0xfffffff0,%esp
 8048438:	50                   	push   %eax
 8048439:	54                   	push   %esp
 804843a:	52                   	push   %edx
 804843b:	68 90 86 04 08       	push   $0x8048690
 8048440:	68 20 86 04 08       	push   $0x8048620
 8048445:	51                   	push   %ecx
 8048446:	56                   	push   %esi
 8048447:	68 af 85 04 08       	push   $0x80485af
 804844c:	e8 cf ff ff ff       	call   8048420 <__libc_start_main@plt>
 8048451:	f4                   	hlt    
 8048452:	66 90                	xchg   %ax,%ax
 8048454:	66 90                	xchg   %ax,%ax
 8048456:	66 90                	xchg   %ax,%ax
 8048458:	66 90                	xchg   %ax,%ax
 804845a:	66 90                	xchg   %ax,%ax
 804845c:	66 90                	xchg   %ax,%ax
 804845e:	66 90                	xchg   %ax,%ax

08048460 <__x86.get_pc_thunk.bx>:
 8048460:	8b 1c 24             	mov    (%esp),%ebx
 8048463:	c3                   	ret    
 8048464:	66 90                	xchg   %ax,%ax
 8048466:	66 90                	xchg   %ax,%ax
 8048468:	66 90                	xchg   %ax,%ax
 804846a:	66 90                	xchg   %ax,%ax
 804846c:	66 90                	xchg   %ax,%ax
 804846e:	66 90                	xchg   %ax,%ax

08048470 <deregister_tm_clones>:
 8048470:	b8 37 a0 04 08       	mov    $0x804a037,%eax
 8048475:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 804847a:	83 f8 06             	cmp    $0x6,%eax
 804847d:	77 01                	ja     8048480 <deregister_tm_clones+0x10>
 804847f:	c3                   	ret    
 8048480:	b8 00 00 00 00       	mov    $0x0,%eax
 8048485:	85 c0                	test   %eax,%eax
 8048487:	74 f6                	je     804847f <deregister_tm_clones+0xf>
 8048489:	55                   	push   %ebp
 804848a:	89 e5                	mov    %esp,%ebp
 804848c:	83 ec 18             	sub    $0x18,%esp
 804848f:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 8048496:	ff d0                	call   *%eax
 8048498:	c9                   	leave  
 8048499:	c3                   	ret    
 804849a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080484a0 <register_tm_clones>:
 80484a0:	b8 34 a0 04 08       	mov    $0x804a034,%eax
 80484a5:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 80484aa:	c1 f8 02             	sar    $0x2,%eax
 80484ad:	89 c2                	mov    %eax,%edx
 80484af:	c1 ea 1f             	shr    $0x1f,%edx
 80484b2:	01 d0                	add    %edx,%eax
 80484b4:	d1 f8                	sar    %eax
 80484b6:	75 01                	jne    80484b9 <register_tm_clones+0x19>
 80484b8:	c3                   	ret    
 80484b9:	ba 00 00 00 00       	mov    $0x0,%edx
 80484be:	85 d2                	test   %edx,%edx
 80484c0:	74 f6                	je     80484b8 <register_tm_clones+0x18>
 80484c2:	55                   	push   %ebp
 80484c3:	89 e5                	mov    %esp,%ebp
 80484c5:	83 ec 18             	sub    $0x18,%esp
 80484c8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484cc:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 80484d3:	ff d2                	call   *%edx
 80484d5:	c9                   	leave  
 80484d6:	c3                   	ret    
 80484d7:	89 f6                	mov    %esi,%esi
 80484d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484e0 <__do_global_dtors_aux>:
 80484e0:	80 3d 34 a0 04 08 00 	cmpb   $0x0,0x804a034
 80484e7:	75 13                	jne    80484fc <__do_global_dtors_aux+0x1c>
 80484e9:	55                   	push   %ebp
 80484ea:	89 e5                	mov    %esp,%ebp
 80484ec:	83 ec 08             	sub    $0x8,%esp
 80484ef:	e8 7c ff ff ff       	call   8048470 <deregister_tm_clones>
 80484f4:	c6 05 34 a0 04 08 01 	movb   $0x1,0x804a034
 80484fb:	c9                   	leave  
 80484fc:	f3 c3                	repz ret 
 80484fe:	66 90                	xchg   %ax,%ax

08048500 <frame_dummy>:
 8048500:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 8048505:	85 c0                	test   %eax,%eax
 8048507:	74 1f                	je     8048528 <frame_dummy+0x28>
 8048509:	b8 00 00 00 00       	mov    $0x0,%eax
 804850e:	85 c0                	test   %eax,%eax
 8048510:	74 16                	je     8048528 <frame_dummy+0x28>
 8048512:	55                   	push   %ebp
 8048513:	89 e5                	mov    %esp,%ebp
 8048515:	83 ec 18             	sub    $0x18,%esp
 8048518:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804851f:	ff d0                	call   *%eax
 8048521:	c9                   	leave  
 8048522:	e9 79 ff ff ff       	jmp    80484a0 <register_tm_clones>
 8048527:	90                   	nop
 8048528:	e9 73 ff ff ff       	jmp    80484a0 <register_tm_clones>

0804852d <check_auth>:
 804852d:	55                   	push   %ebp
 804852e:	89 e5                	mov    %esp,%ebp
 8048530:	83 ec 38             	sub    $0x38,%esp
 8048533:	8b 45 08             	mov    0x8(%ebp),%eax
 8048536:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8048539:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804853f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048542:	31 c0                	xor    %eax,%eax
 8048544:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 804854b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804854e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048552:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8048555:	89 04 24             	mov    %eax,(%esp)
 8048558:	e8 83 fe ff ff       	call   80483e0 <strcpy@plt>
 804855d:	c7 44 24 04 b0 86 04 	movl   $0x80486b0,0x4(%esp)
 8048564:	08 
 8048565:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8048568:	89 04 24             	mov    %eax,(%esp)
 804856b:	e8 40 fe ff ff       	call   80483b0 <strcmp@plt>
 8048570:	85 c0                	test   %eax,%eax
 8048572:	75 07                	jne    804857b <check_auth+0x4e>
 8048574:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
 804857b:	c7 44 24 04 b9 86 04 	movl   $0x80486b9,0x4(%esp)
 8048582:	08 
 8048583:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8048586:	89 04 24             	mov    %eax,(%esp)
 8048589:	e8 22 fe ff ff       	call   80483b0 <strcmp@plt>
 804858e:	85 c0                	test   %eax,%eax
 8048590:	75 07                	jne    8048599 <check_auth+0x6c>
 8048592:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
 8048599:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804859c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804859f:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80485a6:	74 05                	je     80485ad <check_auth+0x80>
 80485a8:	e8 23 fe ff ff       	call   80483d0 <__stack_chk_fail@plt>
 80485ad:	c9                   	leave  
 80485ae:	c3                   	ret    

080485af <main>:
 80485af:	55                   	push   %ebp
 80485b0:	89 e5                	mov    %esp,%ebp
 80485b2:	83 e4 f0             	and    $0xfffffff0,%esp
 80485b5:	83 ec 10             	sub    $0x10,%esp
 80485b8:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 80485bc:	7f 21                	jg     80485df <main+0x30>
 80485be:	8b 45 0c             	mov    0xc(%ebp),%eax
 80485c1:	8b 00                	mov    (%eax),%eax
 80485c3:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485c7:	c7 04 24 c2 86 04 08 	movl   $0x80486c2,(%esp)
 80485ce:	e8 ed fd ff ff       	call   80483c0 <printf@plt>
 80485d3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80485da:	e8 31 fe ff ff       	call   8048410 <exit@plt>
 80485df:	c7 04 24 d8 86 04 08 	movl   $0x80486d8,(%esp)
 80485e6:	e8 05 fe ff ff       	call   80483f0 <puts@plt>
 80485eb:	8b 45 0c             	mov    0xc(%ebp),%eax
 80485ee:	83 c0 04             	add    $0x4,%eax
 80485f1:	8b 00                	mov    (%eax),%eax
 80485f3:	89 04 24             	mov    %eax,(%esp)
 80485f6:	e8 32 ff ff ff       	call   804852d <check_auth>
 80485fb:	85 c0                	test   %eax,%eax
 80485fd:	74 0e                	je     804860d <main+0x5e>
 80485ff:	c7 04 24 fe 86 04 08 	movl   $0x80486fe,(%esp)
 8048606:	e8 e5 fd ff ff       	call   80483f0 <puts@plt>
 804860b:	eb 0c                	jmp    8048619 <main+0x6a>
 804860d:	c7 04 24 18 87 04 08 	movl   $0x8048718,(%esp)
 8048614:	e8 d7 fd ff ff       	call   80483f0 <puts@plt>
 8048619:	c9                   	leave  
 804861a:	c3                   	ret    
 804861b:	66 90                	xchg   %ax,%ax
 804861d:	66 90                	xchg   %ax,%ax
 804861f:	90                   	nop

08048620 <__libc_csu_init>:
 8048620:	55                   	push   %ebp
 8048621:	57                   	push   %edi
 8048622:	31 ff                	xor    %edi,%edi
 8048624:	56                   	push   %esi
 8048625:	53                   	push   %ebx
 8048626:	e8 35 fe ff ff       	call   8048460 <__x86.get_pc_thunk.bx>
 804862b:	81 c3 d5 19 00 00    	add    $0x19d5,%ebx
 8048631:	83 ec 1c             	sub    $0x1c,%esp
 8048634:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048638:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804863e:	e8 35 fd ff ff       	call   8048378 <_init>
 8048643:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048649:	29 c6                	sub    %eax,%esi
 804864b:	c1 fe 02             	sar    $0x2,%esi
 804864e:	85 f6                	test   %esi,%esi
 8048650:	74 27                	je     8048679 <__libc_csu_init+0x59>
 8048652:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048658:	8b 44 24 38          	mov    0x38(%esp),%eax
 804865c:	89 2c 24             	mov    %ebp,(%esp)
 804865f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048663:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048667:	89 44 24 04          	mov    %eax,0x4(%esp)
 804866b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048672:	83 c7 01             	add    $0x1,%edi
 8048675:	39 f7                	cmp    %esi,%edi
 8048677:	75 df                	jne    8048658 <__libc_csu_init+0x38>
 8048679:	83 c4 1c             	add    $0x1c,%esp
 804867c:	5b                   	pop    %ebx
 804867d:	5e                   	pop    %esi
 804867e:	5f                   	pop    %edi
 804867f:	5d                   	pop    %ebp
 8048680:	c3                   	ret    
 8048681:	eb 0d                	jmp    8048690 <__libc_csu_fini>
 8048683:	90                   	nop
 8048684:	90                   	nop
 8048685:	90                   	nop
 8048686:	90                   	nop
 8048687:	90                   	nop
 8048688:	90                   	nop
 8048689:	90                   	nop
 804868a:	90                   	nop
 804868b:	90                   	nop
 804868c:	90                   	nop
 804868d:	90                   	nop
 804868e:	90                   	nop
 804868f:	90                   	nop

08048690 <__libc_csu_fini>:
 8048690:	f3 c3                	repz ret 

Disassembly of section .fini:

08048694 <_fini>:
 8048694:	53                   	push   %ebx
 8048695:	83 ec 08             	sub    $0x8,%esp
 8048698:	e8 c3 fd ff ff       	call   8048460 <__x86.get_pc_thunk.bx>
 804869d:	81 c3 63 19 00 00    	add    $0x1963,%ebx
 80486a3:	83 c4 08             	add    $0x8,%esp
 80486a6:	5b                   	pop    %ebx
 80486a7:	c3                   	ret    

Disassembly of section .rodata:

080486a8 <_fp_hw>:
 80486a8:	03 00                	add    (%eax),%eax
	...

080486ac <_IO_stdin_used>:
 80486ac:	01 00                	add    %eax,(%eax)
 80486ae:	02 00                	add    (%eax),%al
 80486b0:	62 72 69             	bound  %esi,0x69(%edx)
 80486b3:	6c                   	insb   (%dx),%es:(%edi)
 80486b4:	6c                   	insb   (%dx),%es:(%edi)
 80486b5:	69 6e 67 00 6f 75 74 	imul   $0x74756f00,0x67(%esi),%ebp
 80486bc:	67 72 61             	addr16 jb 8048720 <_IO_stdin_used+0x74>
 80486bf:	62 65 00             	bound  %esp,0x0(%ebp)
 80486c2:	75 73                	jne    8048737 <_IO_stdin_used+0x8b>
 80486c4:	61                   	popa   
 80486c5:	67 65 3a 20          	cmp    %gs:(%bx,%si),%ah
 80486c9:	25 73 20 3c 70       	and    $0x703c2073,%eax
 80486ce:	61                   	popa   
 80486cf:	73 73                	jae    8048744 <_IO_stdin_used+0x98>
 80486d1:	77 6f                	ja     8048742 <_IO_stdin_used+0x96>
 80486d3:	72 64                	jb     8048739 <_IO_stdin_used+0x8d>
 80486d5:	3e 0a 00             	or     %ds:(%eax),%al
 80486d8:	48                   	dec    %eax
 80486d9:	65                   	gs
 80486da:	6c                   	insb   (%dx),%es:(%edi)
 80486db:	6c                   	insb   (%dx),%es:(%edi)
 80486dc:	6f                   	outsl  %ds:(%esi),(%dx)
 80486dd:	20 70 65             	and    %dh,0x65(%eax)
 80486e0:	61                   	popa   
 80486e1:	73 61                	jae    8048744 <_IO_stdin_used+0x98>
 80486e3:	6e                   	outsb  %ds:(%esi),(%dx)
 80486e4:	74 2c                	je     8048712 <_IO_stdin_used+0x66>
 80486e6:	20 77 65             	and    %dh,0x65(%edi)
 80486e9:	6c                   	insb   (%dx),%es:(%edi)
 80486ea:	63 6f 6d             	arpl   %bp,0x6d(%edi)
 80486ed:	65 20 74 6f 20       	and    %dh,%gs:0x20(%edi,%ebp,2)
 80486f2:	74 68                	je     804875c <_IO_stdin_used+0xb0>
 80486f4:	65 20 70 6f          	and    %dh,%gs:0x6f(%eax)
 80486f8:	72 74                	jb     804876e <_IO_stdin_used+0xc2>
 80486fa:	61                   	popa   
 80486fb:	6c                   	insb   (%dx),%es:(%edi)
 80486fc:	21 00                	and    %eax,(%eax)
 80486fe:	43                   	inc    %ebx
 80486ff:	6f                   	outsl  %ds:(%esi),(%dx)
 8048700:	6e                   	outsb  %ds:(%esi),(%dx)
 8048701:	67 72 61             	addr16 jb 8048765 <_IO_stdin_used+0xb9>
 8048704:	74 7a                	je     8048780 <_IO_stdin_used+0xd4>
 8048706:	2c 20                	sub    $0x20,%al
 8048708:	79 6f                	jns    8048779 <_IO_stdin_used+0xcd>
 804870a:	75 20                	jne    804872c <_IO_stdin_used+0x80>
 804870c:	61                   	popa   
 804870d:	72 65                	jb     8048774 <_IO_stdin_used+0xc8>
 804870f:	20 69 6e             	and    %ch,0x6e(%ecx)
 8048712:	20 64 61 77          	and    %ah,0x77(%ecx,%eiz,2)
 8048716:	67 00 45 72          	add    %al,0x72(%di)
 804871a:	72 2c                	jb     8048748 <_IO_stdin_used+0x9c>
 804871c:	20 79 6f             	and    %bh,0x6f(%ecx)
 804871f:	75 20                	jne    8048741 <_IO_stdin_used+0x95>
 8048721:	67 6f                	outsl  %ds:(%si),(%dx)
 8048723:	6e                   	outsb  %ds:(%esi),(%dx)
 8048724:	20 68 61             	and    %ch,0x61(%eax)
 8048727:	76 65                	jbe    804878e <_IO_stdin_used+0xe2>
 8048729:	20 74 6f 20          	and    %dh,0x20(%edi,%ebp,2)
 804872d:	74 72                	je     80487a1 <_IO_stdin_used+0xf5>
 804872f:	79 20                	jns    8048751 <_IO_stdin_used+0xa5>
 8048731:	61                   	popa   
 8048732:	67 61                	addr16 popa 
 8048734:	69                   	.byte 0x69
 8048735:	6e                   	outsb  %ds:(%esi),(%dx)
 8048736:	2e                   	cs
 8048737:	2e                   	cs
 8048738:	2e                   	cs
	...

Disassembly of section .eh_frame_hdr:

0804873c <.eh_frame_hdr>:
 804873c:	01 1b                	add    %ebx,(%ebx)
 804873e:	03 3b                	add    (%ebx),%edi
 8048740:	30 00                	xor    %al,(%eax)
 8048742:	00 00                	add    %al,(%eax)
 8048744:	05 00 00 00 64       	add    $0x64000000,%eax
 8048749:	fc                   	cld    
 804874a:	ff                   	(bad)  
 804874b:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 804874f:	00 f1                	add    %dh,%cl
 8048751:	fd                   	std    
 8048752:	ff                   	(bad)  
 8048753:	ff 70 00             	pushl  0x0(%eax)
 8048756:	00 00                	add    %al,(%eax)
 8048758:	73 fe                	jae    8048758 <_IO_stdin_used+0xac>
 804875a:	ff                   	(bad)  
 804875b:	ff 90 00 00 00 e4    	call   *-0x1c000000(%eax)
 8048761:	fe                   	(bad)  
 8048762:	ff                   	(bad)  
 8048763:	ff b0 00 00 00 54    	pushl  0x54000000(%eax)
 8048769:	ff                   	(bad)  
 804876a:	ff                   	(bad)  
 804876b:	ff                   	(bad)  
 804876c:	ec                   	in     (%dx),%al
 804876d:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

08048770 <__FRAME_END__-0xcc>:
 8048770:	14 00                	adc    $0x0,%al
 8048772:	00 00                	add    %al,(%eax)
 8048774:	00 00                	add    %al,(%eax)
 8048776:	00 00                	add    %al,(%eax)
 8048778:	01 7a 52             	add    %edi,0x52(%edx)
 804877b:	00 01                	add    %al,(%ecx)
 804877d:	7c 08                	jl     8048787 <_IO_stdin_used+0xdb>
 804877f:	01 1b                	add    %ebx,(%ebx)
 8048781:	0c 04                	or     $0x4,%al
 8048783:	04 88                	add    $0x88,%al
 8048785:	01 00                	add    %eax,(%eax)
 8048787:	00 20                	add    %ah,(%eax)
 8048789:	00 00                	add    %al,(%eax)
 804878b:	00 1c 00             	add    %bl,(%eax,%eax,1)
 804878e:	00 00                	add    %al,(%eax)
 8048790:	10 fc                	adc    %bh,%ah
 8048792:	ff                   	(bad)  
 8048793:	ff 90 00 00 00 00    	call   *0x0(%eax)
 8048799:	0e                   	push   %cs
 804879a:	08 46 0e             	or     %al,0xe(%esi)
 804879d:	0c 4a                	or     $0x4a,%al
 804879f:	0f 0b                	ud2    
 80487a1:	74 04                	je     80487a7 <_IO_stdin_used+0xfb>
 80487a3:	78 00                	js     80487a5 <_IO_stdin_used+0xf9>
 80487a5:	3f                   	aas    
 80487a6:	1a 3b                	sbb    (%ebx),%bh
 80487a8:	2a 32                	sub    (%edx),%dh
 80487aa:	24 22                	and    $0x22,%al
 80487ac:	1c 00                	sbb    $0x0,%al
 80487ae:	00 00                	add    %al,(%eax)
 80487b0:	40                   	inc    %eax
 80487b1:	00 00                	add    %al,(%eax)
 80487b3:	00 79 fd             	add    %bh,-0x3(%ecx)
 80487b6:	ff                   	(bad)  
 80487b7:	ff 82 00 00 00 00    	incl   0x0(%edx)
 80487bd:	41                   	inc    %ecx
 80487be:	0e                   	push   %cs
 80487bf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80487c5:	02 7e c5             	add    -0x3b(%esi),%bh
 80487c8:	0c 04                	or     $0x4,%al
 80487ca:	04 00                	add    $0x0,%al
 80487cc:	1c 00                	sbb    $0x0,%al
 80487ce:	00 00                	add    %al,(%eax)
 80487d0:	60                   	pusha  
 80487d1:	00 00                	add    %al,(%eax)
 80487d3:	00 db                	add    %bl,%bl
 80487d5:	fd                   	std    
 80487d6:	ff                   	(bad)  
 80487d7:	ff 6c 00 00          	ljmp   *0x0(%eax,%eax,1)
 80487db:	00 00                	add    %al,(%eax)
 80487dd:	41                   	inc    %ecx
 80487de:	0e                   	push   %cs
 80487df:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80487e5:	02 68 c5             	add    -0x3b(%eax),%ch
 80487e8:	0c 04                	or     $0x4,%al
 80487ea:	04 00                	add    $0x0,%al
 80487ec:	38 00                	cmp    %al,(%eax)
 80487ee:	00 00                	add    %al,(%eax)
 80487f0:	80 00 00             	addb   $0x0,(%eax)
 80487f3:	00 2c fe             	add    %ch,(%esi,%edi,8)
 80487f6:	ff                   	(bad)  
 80487f7:	ff 61 00             	jmp    *0x0(%ecx)
 80487fa:	00 00                	add    %al,(%eax)
 80487fc:	00 41 0e             	add    %al,0xe(%ecx)
 80487ff:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048805:	87 03                	xchg   %eax,(%ebx)
 8048807:	43                   	inc    %ebx
 8048808:	0e                   	push   %cs
 8048809:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804880f:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 8048816:	0e                   	push   %cs
 8048817:	14 41                	adc    $0x41,%al
 8048819:	c3                   	ret    
 804881a:	0e                   	push   %cs
 804881b:	10 41 c6             	adc    %al,-0x3a(%ecx)
 804881e:	0e                   	push   %cs
 804881f:	0c 41                	or     $0x41,%al
 8048821:	c7                   	(bad)  
 8048822:	0e                   	push   %cs
 8048823:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048826:	0e                   	push   %cs
 8048827:	04 10                	add    $0x10,%al
 8048829:	00 00                	add    %al,(%eax)
 804882b:	00 bc 00 00 00 60 fe 	add    %bh,-0x1a00000(%eax,%eax,1)
 8048832:	ff                   	(bad)  
 8048833:	ff 02                	incl   (%edx)
 8048835:	00 00                	add    %al,(%eax)
 8048837:	00 00                	add    %al,(%eax)
 8048839:	00 00                	add    %al,(%eax)
	...

0804883c <__FRAME_END__>:
 804883c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	00                   	.byte 0x0
 8049f09:	85 04 08             	test   %eax,(%eax,%ecx,1)

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	e0 84                	loopne 8049e92 <__FRAME_END__+0x1656>
 8049f0e:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	78 83                	js     8049ea5 <__FRAME_END__+0x1669>
 8049f22:	04 08                	add    $0x8,%al
 8049f24:	0d 00 00 00 94       	or     $0x94000000,%eax
 8049f29:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	6c                   	insb   (%dx),%es:(%edi)
 8049f59:	82                   	(bad)  
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	7f 00                	jg     8049f6a <_DYNAMIC+0x56>
 8049f6a:	00 00                	add    %al,(%eax)
 8049f6c:	0b 00                	or     (%eax),%eax
 8049f6e:	00 00                	add    %al,(%eax)
 8049f70:	10 00                	adc    %al,(%eax)
 8049f72:	00 00                	add    %al,(%eax)
 8049f74:	15 00 00 00 00       	adc    $0x0,%eax
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	40                   	inc    %eax
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 14 00             	add    %dl,(%eax,%eax,1)
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 38                	add    %bh,(%eax)
 8049f99:	83 04 08 11          	addl   $0x11,(%eax,%ecx,1)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 30                	add    %dh,(%eax)
 8049fa1:	83 04 08 12          	addl   $0x12,(%eax,%ecx,1)
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 08                	add    %cl,(%eax)
 8049fa9:	00 00                	add    %al,(%eax)
 8049fab:	00 13                	add    %dl,(%ebx)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 08                	add    %cl,(%eax)
 8049fb1:	00 00                	add    %al,(%eax)
 8049fb3:	00 fe                	add    %bh,%dh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 00             	ljmp   *0x0(%edi)
 8049fb9:	83 04 08 ff          	addl   $0xffffffff,(%eax,%ecx,1)
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f ec             	ljmp   *-0x14(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	b6 83                	mov    $0x83,%dh
 804a00e:	04 08                	add    $0x8,%al
 804a010:	c6 83 04 08 d6 83 04 	movb   $0x4,-0x7c29f7fc(%ebx)
 804a017:	08 e6                	or     %ah,%dh
 804a019:	83 04 08 f6          	addl   $0xfffffff6,(%eax,%ecx,1)
 804a01d:	83 04 08 06          	addl   $0x6,(%eax,%ecx,1)
 804a021:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a024:	16                   	push   %ss
 804a025:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a028:	26 84 04 08          	test   %al,%es:(%eax,%ecx,1)

Disassembly of section .data:

0804a02c <__data_start>:
 804a02c:	00 00                	add    %al,(%eax)
	...

0804a030 <__dso_handle>:
 804a030:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a034 <__bss_start>:
 804a034:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048300>
   a:	74 75                	je     81 <_init-0x80482f7>
   c:	20 34 2e             	and    %dh,(%esi,%ebp,1)
   f:	38 2e                	cmp    %ch,(%esi)
  11:	32 2d 31 39 75 62    	xor    0x62753931,%ch
  17:	75 6e                	jne    87 <_init-0x80482f1>
  19:	74 75                	je     90 <_init-0x80482e8>
  1b:	31 29                	xor    %ebp,(%ecx)
  1d:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  20:	38 2e                	cmp    %ch,(%esi)
  22:	32 00                	xor    (%eax),%al

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	2d 85 04 08 ee       	sub    $0xee080485,%eax
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0c 01                	or     $0x1,%al
   2:	00 00                	add    %al,(%eax)
   4:	04 00                	add    $0x0,%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 01                	add    $0x1,%al
   c:	5b                   	pop    %ebx
   d:	00 00                	add    %al,(%eax)
   f:	00 01                	add    %al,(%ecx)
  11:	a5                   	movsl  %ds:(%esi),%es:(%edi)
  12:	00 00                	add    %al,(%eax)
  14:	00 1b                	add    %bl,(%ebx)
  16:	00 00                	add    %al,(%eax)
  18:	00 2d 85 04 08 ee    	add    %ch,0xee080485
  1e:	00 00                	add    %al,(%eax)
  20:	00 00                	add    %al,(%eax)
  22:	00 00                	add    %al,(%eax)
  24:	00 02                	add    %al,(%edx)
  26:	04 07                	add    $0x7,%al
  28:	4e                   	dec    %esi
  29:	00 00                	add    %al,(%eax)
  2b:	00 02                	add    %al,(%edx)
  2d:	01 08                	add    %ecx,(%eax)
  2f:	97                   	xchg   %eax,%edi
  30:	00 00                	add    %al,(%eax)
  32:	00 02                	add    %al,(%edx)
  34:	02 07                	add    (%edi),%al
  36:	bb 00 00 00 02       	mov    $0x2000000,%ebx
  3b:	04 07                	add    $0x7,%al
  3d:	49                   	dec    %ecx
  3e:	00 00                	add    %al,(%eax)
  40:	00 02                	add    %al,(%edx)
  42:	01 06                	add    %eax,(%esi)
  44:	99                   	cltd   
  45:	00 00                	add    %al,(%eax)
  47:	00 02                	add    %al,(%edx)
  49:	02 05 d3 00 00 00    	add    0xd3,%al
  4f:	03 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%eax
  56:	02 08                	add    (%eax),%cl
  58:	05 00 00 00 00       	add    $0x0,%eax
  5d:	02 08                	add    (%eax),%cl
  5f:	07                   	pop    %es
  60:	44                   	inc    %esp
  61:	00 00                	add    %al,(%eax)
  63:	00 02                	add    %al,(%edx)
  65:	04 05                	add    $0x5,%al
  67:	05 00 00 00 02       	add    $0x2000000,%eax
  6c:	04 07                	add    $0x7,%al
  6e:	f2 00 00             	repnz add %al,(%eax)
  71:	00 04 04             	add    %al,(%esp,%eax,1)
  74:	78 00                	js     76 <_init-0x8048302>
  76:	00 00                	add    %al,(%eax)
  78:	02 01                	add    (%ecx),%al
  7a:	06                   	push   %es
  7b:	a0 00 00 00 05       	mov    0x5000000,%al
  80:	dd 00                	fldl   (%eax)
  82:	00 00                	add    %al,(%eax)
  84:	01 05 4f 00 00 00    	add    %eax,0x4f
  8a:	2d 85 04 08 82       	sub    $0x82080485,%eax
  8f:	00 00                	add    %al,(%eax)
  91:	00 01                	add    %al,(%ecx)
  93:	9c                   	pushf  
  94:	c3                   	ret    
  95:	00 00                	add    %al,(%eax)
  97:	00 06                	add    %al,(%esi)
  99:	70 77                	jo     112 <_init-0x8048266>
  9b:	64 00 01             	add    %al,%fs:(%ecx)
  9e:	05 72 00 00 00       	add    $0x72,%eax
  a3:	02 91 4c 07 0e 00    	add    0xe074c(%ecx),%dl
  a9:	00 00                	add    %al,(%eax)
  ab:	01 07                	add    %eax,(%edi)
  ad:	c3                   	ret    
  ae:	00 00                	add    %al,(%eax)
  b0:	00 02                	add    %al,(%edx)
  b2:	91                   	xchg   %eax,%ecx
  b3:	5c                   	pop    %esp
  b4:	07                   	pop    %es
  b5:	e8 00 00 00 01       	call   10000ba <_init-0x70482be>
  ba:	08 4f 00             	or     %cl,0x0(%edi)
  bd:	00 00                	add    %al,(%eax)
  bf:	02 91 58 00 08 78    	add    0x78080058(%ecx),%dl
  c5:	00 00                	add    %al,(%eax)
  c7:	00 d3                	add    %dl,%bl
  c9:	00 00                	add    %al,(%eax)
  cb:	00 09                	add    %cl,(%ecx)
  cd:	6b 00 00             	imul   $0x0,(%eax),%eax
  d0:	00 0f                	add    %cl,(%edi)
  d2:	00 05 16 00 00 00    	add    %al,0x16
  d8:	01 15 4f 00 00 00    	add    %edx,0x4f
  de:	af                   	scas   %es:(%edi),%eax
  df:	85 04 08             	test   %eax,(%eax,%ecx,1)
  e2:	6c                   	insb   (%dx),%es:(%edi)
  e3:	00 00                	add    %al,(%eax)
  e5:	00 01                	add    %al,(%ecx)
  e7:	9c                   	pushf  
  e8:	09 01                	or     %eax,(%ecx)
  ea:	00 00                	add    %al,(%eax)
  ec:	0a b6 00 00 00 01    	or     0x1000000(%esi),%dh
  f2:	15 4f 00 00 00       	adc    $0x4f,%eax
  f7:	02 91 00 0a ce 00    	add    0xce0a00(%ecx),%dl
  fd:	00 00                	add    %al,(%eax)
  ff:	01 15 09 01 00 00    	add    %edx,0x109
 105:	02 91 04 00 04 04    	add    0x4040004(%ecx),%dl
 10b:	72 00                	jb     10d <_init-0x804826b>
 10d:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
   8:	0e                   	push   %cs
   9:	1b 0e                	sbb    (%esi),%ecx
   b:	11 01                	adc    %eax,(%ecx)
   d:	12 06                	adc    (%esi),%al
   f:	10 17                	adc    %dl,(%edi)
  11:	00 00                	add    %al,(%eax)
  13:	02 24 00             	add    (%eax,%eax,1),%ah
  16:	0b 0b                	or     (%ebx),%ecx
  18:	3e 0b 03             	or     %ds:(%ebx),%eax
  1b:	0e                   	push   %cs
  1c:	00 00                	add    %al,(%eax)
  1e:	03 24 00             	add    (%eax,%eax,1),%esp
  21:	0b 0b                	or     (%ebx),%ecx
  23:	3e 0b 03             	or     %ds:(%ebx),%eax
  26:	08 00                	or     %al,(%eax)
  28:	00 04 0f             	add    %al,(%edi,%ecx,1)
  2b:	00 0b                	add    %cl,(%ebx)
  2d:	0b 49 13             	or     0x13(%ecx),%ecx
  30:	00 00                	add    %al,(%eax)
  32:	05 2e 01 3f 19       	add    $0x193f012e,%eax
  37:	03 0e                	add    (%esi),%ecx
  39:	3a 0b                	cmp    (%ebx),%cl
  3b:	3b 0b                	cmp    (%ebx),%ecx
  3d:	27                   	daa    
  3e:	19 49 13             	sbb    %ecx,0x13(%ecx)
  41:	11 01                	adc    %eax,(%ecx)
  43:	12 06                	adc    (%esi),%al
  45:	40                   	inc    %eax
  46:	18 96 42 19 01 13    	sbb    %dl,0x13011942(%esi)
  4c:	00 00                	add    %al,(%eax)
  4e:	06                   	push   %es
  4f:	05 00 03 08 3a       	add    $0x3a080300,%eax
  54:	0b 3b                	or     (%ebx),%edi
  56:	0b 49 13             	or     0x13(%ecx),%ecx
  59:	02 18                	add    (%eax),%bl
  5b:	00 00                	add    %al,(%eax)
  5d:	07                   	pop    %es
  5e:	34 00                	xor    $0x0,%al
  60:	03 0e                	add    (%esi),%ecx
  62:	3a 0b                	cmp    (%ebx),%cl
  64:	3b 0b                	cmp    (%ebx),%ecx
  66:	49                   	dec    %ecx
  67:	13 02                	adc    (%edx),%eax
  69:	18 00                	sbb    %al,(%eax)
  6b:	00 08                	add    %cl,(%eax)
  6d:	01 01                	add    %eax,(%ecx)
  6f:	49                   	dec    %ecx
  70:	13 01                	adc    (%ecx),%eax
  72:	13 00                	adc    (%eax),%eax
  74:	00 09                	add    %cl,(%ecx)
  76:	21 00                	and    %eax,(%eax)
  78:	49                   	dec    %ecx
  79:	13 2f                	adc    (%edi),%ebp
  7b:	0b 00                	or     (%eax),%eax
  7d:	00 0a                	add    %cl,(%edx)
  7f:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
  84:	0b 3b                	or     (%ebx),%edi
  86:	0b 49 13             	or     0x13(%ecx),%ecx
  89:	02 18                	add    (%eax),%bl
  8b:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	52                   	push   %edx
   1:	00 00                	add    %al,(%eax)
   3:	00 02                	add    %al,(%edx)
   5:	00 27                	add    %ah,(%edi)
   7:	00 00                	add    %al,(%eax)
   9:	00 01                	add    %al,(%ecx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	00 61 75             	add    %ah,0x75(%ecx)
  1e:	74 68                	je     88 <_init-0x80482f0>
  20:	5f                   	pop    %edi
  21:	6f                   	outsl  %ds:(%esi),(%dx)
  22:	76 65                	jbe    89 <_init-0x80482ef>
  24:	72 66                	jb     8c <_init-0x80482ec>
  26:	6c                   	insb   (%dx),%es:(%edi)
  27:	6f                   	outsl  %ds:(%esi),(%dx)
  28:	77 32                	ja     5c <_init-0x804831c>
  2a:	2e 63 00             	arpl   %ax,%cs:(%eax)
  2d:	00 00                	add    %al,(%eax)
  2f:	00 00                	add    %al,(%eax)
  31:	00 05 02 2d 85 04    	add    %al,0x4852d02
  37:	08 17                	or     %dl,(%edi)
  39:	ba ae 76 08 22       	mov    $0x220876ae,%edx
  3e:	08 67 76             	or     %ah,0x76(%edi)
  41:	08 67 76             	or     %ah,0x76(%edi)
  44:	3d 08 31 91 67       	cmp    $0x67913108,%eax
  49:	08 4b bc             	or     %cl,-0x44(%ebx)
  4c:	bc 08 3d d8 bb       	mov    $0xbbd83d08,%esp
  51:	02 02                	add    (%edx),%al
  53:	00 01                	add    %al,(%ecx)
  55:	01                   	.byte 0x1

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6c                   	insb   (%dx),%es:(%edi)
   1:	6f                   	outsl  %ds:(%esi),(%dx)
   2:	6e                   	outsb  %ds:(%esi),(%dx)
   3:	67 20 6c 6f          	and    %ch,0x6f(%si)
   7:	6e                   	outsb  %ds:(%esi),(%dx)
   8:	67 20 69 6e          	and    %ch,0x6e(%bx,%di)
   c:	74 00                	je     e <_init-0x804836a>
   e:	70 77                	jo     87 <_init-0x80482f1>
  10:	64                   	fs
  11:	5f                   	pop    %edi
  12:	62 75 66             	bound  %esi,0x66(%ebp)
  15:	00 6d 61             	add    %ch,0x61(%ebp)
  18:	69 6e 00 2f 68 6f 6d 	imul   $0x6d6f682f,0x0(%esi),%ebp
  1f:	65                   	gs
  20:	2f                   	das    
  21:	73 69                	jae    8c <_init-0x80482ec>
  23:	6d                   	insl   (%dx),%es:(%edi)
  24:	6f                   	outsl  %ds:(%esi),(%dx)
  25:	6e                   	outsb  %ds:(%esi),(%dx)
  26:	2f                   	das    
  27:	44                   	inc    %esp
  28:	65                   	gs
  29:	76 65                	jbe    90 <_init-0x80482e8>
  2b:	6c                   	insb   (%dx),%es:(%edi)
  2c:	6f                   	outsl  %ds:(%esi),(%dx)
  2d:	70 6d                	jo     9c <_init-0x80482dc>
  2f:	65 6e                	outsb  %gs:(%esi),(%dx)
  31:	74 2f                	je     62 <_init-0x8048316>
  33:	62 6f 6f             	bound  %ebp,0x6f(%edi)
  36:	6b 73 2f 48          	imul   $0x48,0x2f(%ebx),%esi
  3a:	61                   	popa   
  3b:	63 6b 69             	arpl   %bp,0x69(%ebx)
  3e:	6e                   	outsb  %ds:(%esi),(%dx)
  3f:	67 5f                	addr16 pop %edi
  41:	32 45 00             	xor    0x0(%ebp),%al
  44:	6c                   	insb   (%dx),%es:(%edi)
  45:	6f                   	outsl  %ds:(%esi),(%dx)
  46:	6e                   	outsb  %ds:(%esi),(%dx)
  47:	67 20 6c 6f          	and    %ch,0x6f(%si)
  4b:	6e                   	outsb  %ds:(%esi),(%dx)
  4c:	67 20 75 6e          	and    %dh,0x6e(%di)
  50:	73 69                	jae    bb <_init-0x80482bd>
  52:	67 6e                	outsb  %ds:(%si),(%dx)
  54:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%ecx)
  59:	74 00                	je     5b <_init-0x804831d>
  5b:	47                   	inc    %edi
  5c:	4e                   	dec    %esi
  5d:	55                   	push   %ebp
  5e:	20 43 20             	and    %al,0x20(%ebx)
  61:	34 2e                	xor    $0x2e,%al
  63:	38 2e                	cmp    %ch,(%esi)
  65:	32 20                	xor    (%eax),%ah
  67:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  6c:	65                   	gs
  6d:	3d 67 65 6e 65       	cmp    $0x656e6567,%eax
  72:	72 69                	jb     dd <_init-0x804829b>
  74:	63 20                	arpl   %sp,(%eax)
  76:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  7b:	68 3d 69 36 38       	push   $0x3836693d
  80:	36 20 2d 67 20 2d 66 	and    %ch,%ss:0x662d2067
  87:	73 74                	jae    fd <_init-0x804827b>
  89:	61                   	popa   
  8a:	63 6b 2d             	arpl   %bp,0x2d(%ebx)
  8d:	70 72                	jo     101 <_init-0x8048277>
  8f:	6f                   	outsl  %ds:(%esi),(%dx)
  90:	74 65                	je     f7 <_init-0x8048281>
  92:	63 74 6f 72          	arpl   %si,0x72(%edi,%ebp,2)
  96:	00 75 6e             	add    %dh,0x6e(%ebp)
  99:	73 69                	jae    104 <_init-0x8048274>
  9b:	67 6e                	outsb  %ds:(%si),(%dx)
  9d:	65 64 20 63 68       	gs and %ah,%fs:%gs:0x68(%ebx)
  a2:	61                   	popa   
  a3:	72 00                	jb     a5 <_init-0x80482d3>
  a5:	61                   	popa   
  a6:	75 74                	jne    11c <_init-0x804825c>
  a8:	68 5f 6f 76 65       	push   $0x65766f5f
  ad:	72 66                	jb     115 <_init-0x8048263>
  af:	6c                   	insb   (%dx),%es:(%edi)
  b0:	6f                   	outsl  %ds:(%esi),(%dx)
  b1:	77 32                	ja     e5 <_init-0x8048293>
  b3:	2e 63 00             	arpl   %ax,%cs:(%eax)
  b6:	61                   	popa   
  b7:	72 67                	jb     120 <_init-0x8048258>
  b9:	63 00                	arpl   %ax,(%eax)
  bb:	73 68                	jae    125 <_init-0x8048253>
  bd:	6f                   	outsl  %ds:(%esi),(%dx)
  be:	72 74                	jb     134 <_init-0x8048244>
  c0:	20 75 6e             	and    %dh,0x6e(%ebp)
  c3:	73 69                	jae    12e <_init-0x804824a>
  c5:	67 6e                	outsb  %ds:(%si),(%dx)
  c7:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%ecx)
  cc:	74 00                	je     ce <_init-0x80482aa>
  ce:	61                   	popa   
  cf:	72 67                	jb     138 <_init-0x8048240>
  d1:	76 00                	jbe    d3 <_init-0x80482a5>
  d3:	73 68                	jae    13d <_init-0x804823b>
  d5:	6f                   	outsl  %ds:(%esi),(%dx)
  d6:	72 74                	jb     14c <_init-0x804822c>
  d8:	20 69 6e             	and    %ch,0x6e(%ecx)
  db:	74 00                	je     dd <_init-0x804829b>
  dd:	63 68 65             	arpl   %bp,0x65(%eax)
  e0:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
  e3:	61                   	popa   
  e4:	75 74                	jne    15a <_init-0x804821e>
  e6:	68 00 61 75 74       	push   $0x74756100
  eb:	68 5f 66 6c 61       	push   $0x616c665f
  f0:	67 00 73 69          	add    %dh,0x69(%bp,%di)
  f4:	7a 65                	jp     15b <_init-0x804821d>
  f6:	74 79                	je     171 <_init-0x8048207>
  f8:	70 65                	jo     15f <_init-0x8048219>
	...
